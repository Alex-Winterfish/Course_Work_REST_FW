name: Habit_Tracker CI

on: [push, pull_request]

env:
  SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run Flake8
        run: flake8 .

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        run: python manage.py migrate

      - name: Run tests
        run: python manage.py test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USER_NAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t "${{ secrets.DOCKER_HUB_USER_NAME }}/habit_tracker:${{ github.sha }}" .

      - name: Push Docker image to Docker Hub
        run: docker push "${{ secrets.DOCKER_HUB_USER_NAME }}/habit_tracker:${{ github.sha }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to server via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ${{ secrets.DEPLOY_DIR }}
            docker pull ${{ secrets.DOCKER_HUB_USER_NAME }}/habit_tracker:${{ github.sha }}
            docker stop habit_tracker || true
            docker rm habit_tracker || true
            docker run -d --name habit_tracker --env-file ${{ secrets.DEPLOY_DIR }}.env -p 80:8000 ${{ secrets.DOCKER_HUB_USER_NAME }}/habit_tracker:${{ github.sha }}
          EOF