
services:
  habit_tracker:
    build: .
    command: >
      sh -c "python manage.py collectstatic --noinput && python manage.py migrate && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - habit_tracker:/app
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      [db]
    networks:
      app_network:
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app_network:
  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - habit_tracker
    networks:
      app_network:

  db:
    image: postgres
    env_file:
      - .env
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      app_network:
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  celery:
    build:
      context: .
    command: celery -A config worker -l INFO
    volumes:
      - .:/app
    depends_on:
      - habit_tracker
      - db
      - redis
    networks:
      app_network:
  celery_beat:
    build:
      context: .
    command: celery -A config beat -l INFO -S django
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - celery
    networks:
      app_network:
networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  habit_tracker: